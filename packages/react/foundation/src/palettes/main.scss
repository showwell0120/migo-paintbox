/*
@figma: https://www.figma.com/file/Sv8VnmaINqyDQcpdO3cz5M/%F0%9F%96%A5-Foundation?node-id=5%3A2&t=a6oI9cMzvoyzJsju-0
*/

@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap);

@font-face {
  font-family: 'Roboto Fallback';
  font-style: normal;
  font-weight: 400;
  src: local('Times New Roman');
  ascent-override: 84.57%;
  descent-override: 22.25%;
  line-gap-override: 0%;
  size-adjust: 109.71%;
}

html, body, * {
    font-family: Roboto, 'Roboto Fallback';
}

$palettes: (
    // App Colors
    app: (
        red: #D63131,
        critical: #F7514D,
        success: #4F9D52,
        warning: #F08843,
        'decorative-red': #E02828,
        'decorative-blue': #3453DA,
        'decorative-purple': #9C27B0,
        'background-black': #121212,
        'background-blue': #1B1E2E,
    ),
    // Web Colors
    primary-light: (
        brand: #D63131,
        primary: #6484FF,
        secondary: #6C757D,
        muted: #8C8C8C,
        success: #4F9D52,
        danger: #DC3545,
        warning: #F08843,
        info: #17A2B8,
        light: #EDEDED,
        hover: rgba(232, 245, 253, 0.8),
        dark: #292D43,
        white: #FFFFFF,
        transparent: rgba(196, 196, 196, 0.1),
    ),
    primary-dark: (
        brand: #D63131,
        primary: #809AFF,
        secondary: #7C8892,
        muted: #9C9C9C,
        success: #65BB68,
        danger: #F7514D,
        warning: #F99451,
        info: #18B0C8,
        light: #E8E8E8,
        hover: #35363A,
        dark: #202124,
        white: #FFFFFF,
        transparent: rgba(255, 255, 255, 0.1),
    ),
    secondary-light: (
        brand: #F8DEDE,
        primary: #DAE2FF,
        secondary: #C4C8CB,
        success: #C1E4C3,
        danger: #F5C3C8,
        warning: #FAD9C2,
        info: #C8E9EE,
    ),
    secondary-dark: (
        brand: #381c1c,
        primary: #19203d,
        secondary: #2b2f32,
        success: #294b2a,
        danger: #430f15,
        warning: #4d2c15,
        info: #07272c,
    ),
    gray: (
        100: #F8F9FA,
        200: #E9ECEF,
        300: #DEE2E6,
        400: #CED4DA,
        500: #ADB5BD,
        600: #6C757D,
        700: #495057,
        800: #343A40,
        900: #212529
    ),
    text-light: (
        body: #000000,
        dark: #292D43,
        muted: #8C8C8C,
        halfbody: rgba(0, 0, 0, 0.5),
    ),
    text-dark: (
        body: #FFFFFF,
        dark: #A8A8A8,
        muted: #686868,
        halfbody: rgba(255, 255, 255, 0.5),
    )
);


// define accent css variables in root and body
:root {
    $colors: map-get($palettes, gray);
    @each $name, $color in $colors {
        --gray-#{$name}: #{$color};
    }

    $app-colors: map-get($palettes, 'app');
    @each $name, $color in $app-colors {
        --app-#{$name}: #{$color};
        .app-#{$name}-contained {
            background-color: #{$color};
            color: var(--primary-white);
            svg {
                path {
                    fill: var(--primary-white);
                }
            }
        }
        .app-#{$name}-outlined {
            background-color: transparent;
            color: #{$color};
            svg {
                path {
                    fill: #{$color};
                }
            }
            &.has-bd {
                border: 1px solid #{$color};
            }
        }
    }
}

:root, *[data-theme="light"] {
    $primary-colors: map-get($palettes, 'primary-light');
    @each $name, $color in $primary-colors {
        --primary-#{$name}: #{$color};
        .primary-#{$name}-contained {
            background-color: #{$color};
            color: var(--primary-white);
            svg {
                path {
                    fill:  var(--primary-white);
                }
            }
            @if ($name == light) or ($name == hover) or ($name == white) or ($name == transparent) {
                color: var(--gray-800);
                svg {
                    path {
                        fill:  var(--gray-800);
                    }
                }
            }
        }
        .primary-#{$name}-outlined {
            background-color: transparent;
            color: #{$color};
            svg {
                path {
                    fill: #{$color};
                }
            }
            &.has-bd {
                border: 1px solid #{$color};
            }
        }
    }

    $secondary-colors: map-get($palettes, 'secondary-light');
    @each $name, $color in $secondary-colors {
        --secondary-#{$name}: #{$color};
        .secondary-#{$name}-contained {
            background-color: #{$color};
            color: var(--primary-#{$name});
            svg {
                path {
                    fill: var(--primary-#{$name});
                }
            }
        }
        .secondary-#{$name}-outlined {
            background-color: transparent;
            color: #{$color};
            svg {
                path {
                    fill: #{$color};
                }
            }
            &.has-bd {
                border: 1px solid #{$color};
            }
        }
    }

    $text-colors: map-get($palettes, 'text-light');
    @each $name, $color in $text-colors {
        --text-#{$name}: #{$color};
    }
}

*[data-theme="dark"] {
    $primary-colors: map-get($palettes, 'primary-dark');
    @each $name, $color in $primary-colors {
        --primary-#{$name}: #{$color};
        .primary-#{$name}-contained {
            background-color: #{$color};
            color: var(--primary-white);
            svg {
                path {
                    fill:  var(--primary-white);
                }
            }
            &.light, &.hover, &.white, &.transparent {
                color: var(--gray-800);
                svg {
                    path {
                        fill:  var(--gray-800);
                    }
                }
            }
        }
        .primary-#{$name}-outlined {
            background-color: transparent;
            color: #{$color};
            svg {
                path {
                    fill: #{$color};
                }
            }
            &.has-bd {
                border: 1px solid #{$color};
            }
        }
    }

    $secondary-colors: map-get($palettes, 'secondary-dark');
    @each $name, $color in $secondary-colors {
        --secondary-#{$name}: #{$color};
        .secondary-#{$name}-contained {
            background-color: #{$color};
            color: var(--primary-#{$name});
            svg {
                path {
                    fill: var(--primary-#{$name});
                }
            }
        }
        .secondary-#{$name}-outlined {
            background-color: transparent;
            color: #{$color};
            svg {
                path {
                    fill: #{$color};
                }
            }
            &.has-bd {
                border: 1px solid #{$color};
            }
        }
    }

    $text-colors: map-get($palettes, 'text-dark');
    @each $name, $color in $text-colors {
        --text-#{$name}: #{$color};
    }
}